; -----------------------------------------------------------------------------
; This file configures the Window Resizer Tool. Windows INI format.
; -----------------------------------------------------------------------------

; -----------------------------------------------------------------------------
; Options for the program to launch
; -----------------------------------------------------------------------------
[program]
; Name of the program to run (without parameters)
name=program.exe
; Path to the program. Leave blank to use the current directory.
path=
; Any parameters to pass to the program
parameters=params here

; -----------------------------------------------------------------------------
; Options for resizing the window
; -----------------------------------------------------------------------------
[windowresize]
; Method to use to find the correct window to resize. Valid settings:
; pidonly    - look for the first window under the PID of the launched program
;              Many programs launch hidden windows, so this option only works
;              with a few programs.
; pidandname - Look for a window matching the name mask under the PID of the
;              launched program. Recommended, should work for most programs.
; nameonly   - Look for a window matching the name mask out of all windows in
;              the current user session. Useful for programs that spawn a
;              child process.
windowfindmethod=pidandname

; Name mask to use with the find methods "pidandname" and "nameonly".
; The name mask may begin and end with *. If the name begins with *, any window
; titles matching the latter part of the name will match. If the name ends
; with *, any window titles matching the beginning of the name will match. If
; the name begins and ends with *, any window titles containing the name mask
; will match.
namemask=*My Window*

; Delay (in milliseconds) until we attempt the first window resize.
; Must be greater than 0
firstresizedelayms=500

; We keep trying until we successfully resize, until the time limit here.
; Must be greater than firstresizedelayms
firstresizetimeoutms=10000

; When resizing the window, what scaling method do you want to use?
; defined      - Set to <windowwidth> x <windowheight> pixels in size
; windowscale  - Set the window to a scaled size (defined by <scale>)
;                100% = original size, 200% = double size, 50% = half size
;                WARNING: If the program remembers the old window size and
;                starts up using the previous window size set by windowsizer,
;                it will keep growing (or shrinking) in size. For programs that
;                do that, please do not use this scaling method.
; displayscale - Set the window to a scaled size based on the display size
;                The scale is defined by <scale>
;                100% = full screen, 50% = half of the screen
; pixelscale   - Set the window to a scaled size based on the <windowwidth>
;                and <windowheight> settings
;                100% = same as <windowwidth> x <windowheight>
;                50% = half of <windowwidth> x <windowheight>
;                Useful for programs that save and restore the window size.
;                Set a base window size in <windowwidth> and <windowheight> and
;                use pixelscale to change the size of the window.
;
; If you are using the scale options, you probably also want to set
;  <clientresize> to "1" for better scaling.
scalingmethod=displayscale
;scalingmethod=pixelscale

; If <scalingmethod> is set to "windowscale" or "displayscale", define the
; scale percentage here.
scale=90

; If the scaling method is "displayscale", maintain the aspect ratio when
; scaling the window? Note that this option will not work correctly with
; programs that save and restore the window size unless you manually specify an
; aspect ratio below.
maintainaspectratio=1

; Define this to specify an aspect ratio to use when the scaling method is
; "displayscale" and the <maintainaspectratio> setting is "1". You can specify
; it either as a floating point ratio of the window width to the window height
;(e.g. 2 means the width is double the height) or as a string like this:
; "w:h" (examples: "4:3", "16:9")
; If not defined, it will be detected. Autodetection does not work properly
; with programs that load and save the window size!
;aspectratio=4:3

; What size (in pixels) to resize the window to?
windowwidth=640
windowheight=480

; Set this to 1 to lock the window to the requested size, 0 to only change the
; size only once.
lockwindow=1

; Do you also want to move the window position?
; centre - Centre the window (uses the size of the primary monitor)
; fixed  - Move the window to a fixed location <windowx, windowy>
; none   - Do not move the window
movewindow=centre

; Do you want to move the window only once, or constantly move the window?
; Note this setting only has an effect if <lockwindow> is also set to 1.
alwaysmovewindow=0

; Where to move the window to (in pixels)
windowx=0
windowy=0

; Set to 1 to use client co-ordinates rather than window co-ordinates.
; If you use client co-ordinates, the window size adjustment will take the
; border and titlebar size into account; ensuring the client area (useable area
; inside the window) matches the requested size. You probably want to use this
; for games.
; Border size detection is unreliable with programs that use ownerdraw for the
; title bar (Jazz Jackrabbit 2 for example) or that do not use the entire
; window area for rendering. For those programs, either do not use clientresize
; or refer to the [tweaks] section.
clientresize=1

; -----------------------------------------------------------------------------
; Advanced options to tweak windowsizer for difficult programs and edge cases
; -----------------------------------------------------------------------------
[tweaks]

; Manually specify a border size or autodetect the border size of the window?
; 1 = autodetect, 0 = manually specify
autodetectbordersize=1

; If not autodetecting the border size, specify it below in pixels. The window
; size is calculated like this:
; Window width = client width + border width
; Window height = client height + border height
; The border width/height includes the frame, titlebar and menu.
borderwidth=0
borderheight=0


; When using scalingmethod=displayscale and clientresize=1, there are 2 ways to
; perform the scaling calculation:
; Ignoring borders: (scalingignorebordersize=1)
;   Scale the window (size = display * scale), then add the size of the borders
;   to the result. This might result in the window being larger than you
;   expected due to the border size being added after calculating the scale.
; Taking borders into consideration: (scalingignorebordersize=0)
;  Size = (display - bordersize) * scale, then add the border size. This will
;  result in the window always appearing to be the size you requested, but is
;  less useful if you are trying to get pixel perfect results.
scalingignorebordersize=0